name: docker-ci-test

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"
      - "develop"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Container registry
        if: ${{ !env.ACT }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2
      - name: Extract metadata for the Docker image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: ${{ env.ACT && 'false' || 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: startsWith(github.ref, 'refs/heads/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      - name: Create .env file
#        run: |
#          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
#          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
#          touch .env
#          {
#            echo "WEB3_JWT=${{ secrets.WEB3_JWT }}"
#            echo "IPFS_PINNER_URL=${{ secrets.IPFS_PINNER_URL }}"
#            echo "ERIGON_NODE=${{ secrets.ERIGON_NODE }}"
#            echo "NODE_ETHEREUM_MAINNET=${{ secrets.NODE_ETHEREUM_MAINNET }}"
#            echo "BLOCK_RESULT_OPERATOR_PRIVATE_KEY=${{ secrets.BLOCK_RESULT_OPERATOR_PRIVATE_KEY }}"
#            echo "EVM_SERVER_URL=${{ secrets.EVM_SERVER_URL }}"
#            echo "CI=${{ secrets.CI }}"
#            echo "CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }}"
#            echo "GITHUB_REF=${{ github.ref_name }}"
#            echo "CODECOV_SLUG=covalenthq/refiner"
#            echo "GITHUB_SHA=$GITHUB_SHA"
#            echo "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
#            echo "GITHUB_ENV=$GITHUB_ENV"
#            echo "W3_AGENT_KEY=${{ secrets.W3_AGENT_KEY }}"
#            echo "PROOF_OUT_HEX=${{ secrets.PROOF_OUT_HEX }}"
#            echo "W3_DELEGATION_FILE=${{ secrets.W3_DELEGATION_FILE }}"
#          } >> .env
#
#      - name: Load .env file
#        uses: xom9ikk/dotenv@v1.0.2
#
#      - name: Run containers
#        run: docker compose --env-file ".env" -f "docker-compose-ci.yml" up --remove-orphans --exit-code-from refiner
#
#      - name: Check running refiner
#        run: docker inspect refiner
#
#      - name: Check running containers
#        run: docker ps
#
#      - name: Delete .env & bin files
#        run: |
#          rm -rf .env
#
#      - name: Stop containers
#        if: always()
#        run: docker compose -f "docker-compose-ci.yml" down

  release:
    runs-on: ubuntu-latest
    needs: [ test ]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Create release
        uses: marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0 # v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: false
          prerelease: false