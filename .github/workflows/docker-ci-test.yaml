name: docker-ci-test

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
      - "develop"

jobs:
  deploy-test:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Artifact Registry/GCR
        uses: docker/login-action@v2
        with:
          registry: us-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - uses: actions/checkout@v2
      # - uses: satackey/action-docker-layer-caching@v0.0.10
      #   # Ignore the failure of a step and avoid terminating the job.
      #   continue-on-error: true
      # - name: Build & Publish the Docker image
      #   run: |
      #     docker buildx create --name builder --use --platform=linux/amd64,linux/arm64  && docker buildx build --platform=linux/amd64,linux/arm64 . -t  us-docker.pkg.dev/covalent-project/network/rudder:latest --push

      - name: Create .env file
        run: |
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
          touch .env
          {
            echo "WEB3_JWT=${{ secrets.WEB3_JWT }}"
            echo "IPFS_PINNER_URL=${{ secrets.IPFS_PINNER_URL }}"
            echo "ERIGON_NODE=${{ secrets.ERIGON_NODE }}"
            echo "NODE_ETHEREUM_MAINNET=${{ secrets.NODE_ETHEREUM_MAINNET }}"
            echo "BLOCK_RESULT_OPERATOR_PRIVATE_KEY=${{ secrets.BLOCK_RESULT_OPERATOR_PRIVATE_KEY }}"
            echo "EVM_SERVER_URL=${{ secrets.EVM_SERVER_URL }}"
            echo "CI=${{ secrets.CI }}"
            echo "CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }}"
            echo "GITHUB_REF=${{ github.ref_name }}"
            echo "CODECOV_SLUG=covalenthq/rudder"
            echo "GITHUB_SHA=$GITHUB_SHA"
            echo "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
            echo "GITHUB_ENV=$GITHUB_ENV"
            echo "W3_AGENT_KEY=${{ secrets.W3_AGENT_KEY }}"
            echo "PROOF_OUT_HEX=${{ secrets.PROOF_OUT_HEX }}"
          } >> .env
          cat .env

      - name: Load .env file
        uses: xom9ikk/dotenv@v1.0.2

      # - name: Create proof.out
      #   run: |
      #     touch proof_out_hex.txt
      #     chmod +x proof_out_hex.txt
      #     echo ${{ secrets.PROOF_OUT_HEX }} | xxd -r -p
      #     # echo ${{ secrets.PROOF_OUT_HEX }} >> proof_out_hex.txt
      #     # xxd -r -p proof_out_hex.txt > proof_from_hex.out
      #     # mkdir ~/.ipfs
      #     # mv ./proof_from_hex.out ~/.ipfs/proof_from_hex.out

      - name: Run containers
        run: docker compose --env-file ".env" -f "docker-compose-ci.yml" up --remove-orphans --exit-code-from rudder

      - name: Check running rudder
        run: docker inspect rudder

      - name: Check running containers
        run: docker ps

      - name: Delete .env & bin files
        run: |
          rm -rf .env

      - name: Stop containers
        if: always()
        run: docker compose -f "docker-compose-ci.yml" down
